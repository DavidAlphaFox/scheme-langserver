(library (scheme-langserver analysis type rnrs-chez-rules)
  (export rnrs-chez-rules)
  (import (rnrs))

(define rnrs-chez-rules '(
(abort (void? x))
(abort (void? x) (something? x))
(andmap (boolean? x) (procedure? x) (list? x) **1)
(annotation-expression (something? x) (annotation? x))
(annotation-options (something? x) (annotation? x))
(annotation-source (something? x) (annotation? x))
(annotation-stripped (something? x) (annotation? x))
(ash (integer? x) (integer? x) (integer? x))
(atan (number? x) (real? x) (real? x))
(call-with-bytevector-output-port (void? x) (procedure? x))
(call-with-bytevector-output-port (void? x) (procedure? x) (transcoder? x))
(call-with-current-continuation (void? x) (procedure?x))
(call-with-input-file (void? x) (string? x) (procedure? x))
(call/1cc (something? x) (procedure? x))
(call/cc (something? x) (procedure? x))
(char- (or (boolean=? #f x) (integer? x)) (char? x) (char? x))
(char-general-category (symbol? x) (char? x))
(char-name (or (symbol? x) (boolean=? #f x) (char? x)) (or (char? x) (symbol? x)))
(char-name (or (symbol? x) (boolean=? #f x) (char? x)) (string? x) (char? x))
(char-titlecase (char? x) (char? x))
(char-upcase (char? x) (char? x))
(conjugate (number? x) (number? x))
(decode-float (vector? x) (flonum? x))
(display (void? x) (something? x) (textual-output-port? x))
(display-condition (void? x) (something? x) (textual-output-port? x))
(display-statistics (void? x) (textual-output-port? x))
(display-string (void? x) (string? x))
(display-string (void? x) (string? x) (textual-output-port? x))
(div0 (number? x) (number? x) (number? x))
(div0-and-mod0 (number? x) (number? x) (number? x))
(open-bytevector-input-port (binary-input-port? x) (bytevector? x))
(open-bytevector-input-port (binary-input-port? x) (bytevector? x) (transcoder? x))
(open-bytevector-output-port (binary-output-port? x))
(make-annotation (annotation? x))
(make-annotation (annotation? x))
(syntax->annotation (annotation? x) (something? x))
(make-assertion-violation (assertion-violation? x))
(< (boolean? x) (real? x) (real? x) **1)
(<= (boolean? x) (real? x) (real? x) **1)
(= (boolean? x) (number? x) ...)
(> (boolean? x) (real? x) (real? x) **1)
(>= (boolean? x) (real? x) (real? x) **1)
(annotation? (boolean? x) (something? x))
(assertion-violation? (boolean? x) (something? x))
(atom? (boolean? x) (something? x))
(bignum? (boolean? x))
(binary-port? (boolean? x) (something? x))
(bitwise-bit-set? (boolean? x))
(boolean=? (boolean? x))
(boolean? (boolean? x) (something? x))
(bound-identifier=? (boolean? x))
(box? (boolean? x) (something? x))
(bwp-object? (boolean? x) (something? x))
(bytevector=? (boolean? x) (bytevector? x) (bytevector? x))
(bytevector? (boolean? x) (something? x))
(cflonum? (boolean? x))
(char-alphabetic? (boolean? x))
(char-ci<=? (boolean? x))
(char-ci<=? (boolean? x))
(char-ci<? (boolean? x))
(char-ci<? (boolean? x))
(char-ci=? (boolean? x))
(char-ci=? (boolean? x))
(char-ci>=? (boolean? x))
(char-ci>=? (boolean? x))
(char-ci>? (boolean? x))
(char-ci>? (boolean? x))
(char-lower-case? (boolean? x))
(char-numeric? (boolean? x))
(char-ready? (boolean? x))
(char-ready? (boolean? x))
(char-title-case? (boolean? x))
(char-upper-case? (boolean? x))
(char-whitespace? (boolean? x))
(char<=? (boolean? x))
(char<=? (boolean? x))
(char<? (boolean? x))
(char<? (boolean? x))
(char=? (boolean? x))
(char=? (boolean? x))
(char>=? (boolean? x))
(char>=? (boolean? x))
(char>? (boolean? x))
(char>? (boolean? x))
(char? (boolean? x) (something? x))
(compile-time-value? (boolean? x) (something? x))
(complex? (boolean? x) (something? x))
(condition? (boolean? x) (something? x))
(continuation-condition? (boolean? x) (something? x))
(cost-center? (boolean? x) (something? x))
(date-dst? (boolean? x))
(date? (boolean? x) (something? x))
(directory-separator? (boolean? x))
(enum-set-member? (boolean? x))
(enum-set-subset? (boolean? x))
(enum-set=? (boolean? x))
(enum-set? (boolean? x))
(environment-mutable? (boolean? x))
(environment? (boolean? x) (something? x))
(eof-object? (boolean? x) (something? x))
(ephemeron-pair? (boolean? x) (something? x))
(eq-hashtable-contains? (boolean? x))
(eq-hashtable-ephemeron? (boolean? x))
(eq-hashtable-weak? (boolean? x))
(eq-hashtable? (boolean? x) (something? x))
(eq? (boolean? x) (something? x))
(equal? (boolean? x) (something? x))
(eqv? (boolean? x) (something? x))
(error? (boolean? x) (something? x))
(even? (boolean? x))
(exact? (boolean? x) (number? x))
(file-directory? (boolean? x))
(file-directory? (boolean? x))
(file-exists? (boolean? x))
(file-exists? (boolean? x))
(file-port? (boolean? x))
(file-regular? (boolean? x))
(file-regular? (boolean? x))
(file-symbolic-link? (boolean? x))
(finite? (boolean? x) (real? x))
(fixnum? (boolean? x))
(fl<=? (boolean? x))
(fl<? (boolean? x))
(fl=? (boolean? x))
(fl>=? (boolean? x))
(fl>? (boolean? x))
(fleven? (boolean? x))
(flfinite? (boolean? x))
(flinfinite? (boolean? x))
(flinteger? (boolean? x))
(flnan? (boolean? x))
(flnegative? (boolean? x))
(flnonnegative? (boolean? x))
(flnonpositive? (boolean? x))
(flodd? (boolean? x))
(flonum? (boolean? x))
(flpositive? (boolean? x))
(flzero? (boolean? x))
(foreign-entry? (boolean? x))
(format-condition? (boolean? x) (something? x))
(free-identifier=? (boolean? x))
(fx<=? (boolean? x))
(fx<? (boolean? x))
(fx=? (boolean? x))
(fx>=? (boolean? x))
(fx>? (boolean? x))
(fxbit-set? (boolean? x))
(fxeven? (boolean? x))
(fxlogbit? (boolean? x) (integer? x) (fixnum? x))
(fxnegative? (boolean? x))
(fxnonnegative? (boolean? x) (fixnum? x))
(fxnonpositive? (boolean? x) (fixnum? x))
(fxodd? (boolean? x))
(fxpositive? (boolean? x))
(fxvector? (boolean? x) (something? x))
(fxzero? (boolean? x))
(gensym? (boolean? x) (something? x))
(guardian? (boolean? x) (something? x))
(hash-table? (boolean? x) (something? x))
(hashtable-contains? (boolean? x))
(hashtable-ephemeron? (boolean? x) (something? x))
(hashtable-mutable? (boolean? x))
(hashtable-weak? (boolean? x) (something? x))
(hashtable? (boolean? x) (something? x))
(i/o-decoding-error? (boolean? x) (something? x))
(i/o-encoding-error? (boolean? x) (something? x))
(i/o-error? (boolean? x) (something? x))
(i/o-file-already-exists-error? (boolean? x) (something? x))
(i/o-file-does-not-exist-error? (boolean? x) (something? x))
(i/o-file-is-read-only-error? (boolean? x) (something? x))
(i/o-file-protection-error? (boolean? x) (something? x))
(i/o-filename-error? (boolean? x) (something? x))
(i/o-invalid-position-error? (boolean? x) (something? x))
(i/o-port-error? (boolean? x) (something? x))
(i/o-read-error? (boolean? x) (something? x))
(i/o-write-error? (boolean? x) (something? x))
(identifier? (boolean? x) (something? x))
(immutable-box? (boolean? x) (something? x))
(immutable-bytevector? (boolean? x) (something? x))
(immutable-fxvector? (boolean? x) (something? x))
(immutable-string? (boolean? x) (something? x))
(immutable-vector? (boolean? x) (something? x))
(implementation-restriction-violation? (boolean? x) (something? x))
(inexact? (boolean? x) (number? x))
(infinite? (boolean? x) (real? x))
(input-port-ready? (boolean? x))
(input-port? (boolean? x) (something? x))
(integer-valued? (boolean? x) (something? x))
(integer? (boolean? x) (something? x))
(interactive? (boolean? x))
(irritants-condition? (boolean? x) (something? x))
(lexical-violation? (boolean? x) (something? x))
(list? (boolean? x) (something? x))
(literal-identifier=? (boolean? x))
(locked-object? (boolean? x) (something? x))
(logbit? (boolean? x))
(message-condition? (boolean? x) (something? x))
(mutable-box? (boolean? x) (something? x))
(mutable-bytevector? (boolean? x) (something? x))
(mutable-fxvector? (boolean? x) (something? x))
(mutable-string? (boolean? x) (something? x))
(mutable-vector? (boolean? x) (something? x))
(mutex? (boolean? x) (something? x))
(nan? (boolean? x) (real? x))
(negative? (boolean? x) (real? x))
(no-infinities-violation? (boolean? x) (something? x))
(no-nans-violation? (boolean? x) (something? x))
(non-continuable-violation? (boolean? x) (something? x))
(nonnegative? (boolean? x) (real? x))
(nonpositive? (boolean? x) (real? x))
(not (boolean? x) (something? x))
(null? (boolean? x) (something? x))
(number? (boolean? x))
(odd? (boolean? x))
(output-port? (boolean? x) (something? x))
(pair? (boolean? x) (something? x))
(path-absolute? (boolean? x))
(petite? (boolean? x))
(port-bol? (boolean? x))
(port-closed? (boolean? x))
(port-eof? (boolean? x))
(port-has-port-length? (boolean? x))
(port-has-port-nonblocking?? (boolean? x))
(port-has-port-position? (boolean? x))
(port-has-set-port-length!? (boolean? x))
(port-has-set-port-nonblocking!? (boolean? x))
(port-has-set-port-position!? (boolean? x))
(port-input-empty? (boolean? x))
(port-nonblocking? (boolean? x))
(port-output-full? (boolean? x))
(port? (boolean? x) (something? x))
(positive? (boolean? x) (real? x))
(procedure? (boolean? x) (something? x))
(rational-valued? (boolean? x) (something? x))
(rational? (boolean? x) (something? x))
(ratnum? (boolean? x))
(real-valued? (boolean? x) (something? x))
(real? (boolean? x) (something? x))
(record-constructor-descriptor? (boolean? x) (something? x))
(record-field-accessible? (boolean? x))
(record-field-mutable? (boolean? x))
(record-field-mutable? (boolean? x))
(record-type-descriptor? (boolean? x) (something? x))
(record-type-generative? (boolean? x))
(record-type-opaque? (boolean? x))
(record-type-sealed? (boolean? x))
(record? (boolean? x) (something? x))
(record? (boolean? x) (something? x))
(serious-condition? (boolean? x) (something? x))
(source-condition? (boolean? x) (something? x))
(source-file-descriptor? (boolean? x) (something? x))
(source-object? (boolean? x) (something? x))
(source-table-contains? (boolean? x) (something? x))
(source-table? (boolean? x) (something? x))
(sstats? (boolean? x) (something? x))
(string-ci<=? (boolean? x))
(string-ci<? (boolean? x))
(string-ci=? (boolean? x))
(string-ci>=? (boolean? x))
(string-ci>? (boolean? x))
(string<=? (boolean? x))
(string<? (boolean? x))
(string=? (boolean? x))
(string>=? (boolean? x))
(string>? (boolean? x))
(string? (boolean? x) (something? x))
(symbol-hashtable-contains? (boolean? x))
(symbol-hashtable? (boolean? x) (something? x))
(symbol=? (boolean? x))
(symbol? (boolean? x) (something? x))
(syntax-violation? (boolean? x) (something? x))
(textual-port? (boolean? x) (something? x))
(thread-condition? (boolean? x) (something? x))
(thread? (boolean? x) (something? x))
(threaded? (boolean? x))
(time<=? (boolean? x))
(time<? (boolean? x))
(time=? (boolean? x))
(time>=? (boolean? x))
(time>? (boolean? x))
(time? (boolean? x) (something? x))
(top-level-bound? (boolean? x))
(top-level-bound? (boolean? x))
(top-level-mutable? (boolean? x))
(top-level-mutable? (boolean? x))
(top-level-syntax? (boolean? x))
(top-level-syntax? (boolean? x))
(transcoder? (boolean? x) (something? x))
(undefined-violation? (boolean? x) (something? x))
(vector? (boolean? x) (something? x))
(violation? (boolean? x) (something? x))
(warning? (boolean? x) (something? x))
(weak-pair? (boolean? x) (something? x))
(who-condition? (boolean? x) (something? x))
(zero? (boolean? x) (number? x))
(bytevector->immutable-bytevector (bytevector? x))
(bytevector-copy (bytevector? x))
(make-bytevector (bytevector? x))
(make-bytevector (bytevector? x))
(s8-list->bytevector (bytevector? x))
(sint-list->bytevector (bytevector? x))
(string->bytevector (bytevector? x))
(string->utf16 (bytevector? x))
(string->utf16 (bytevector? x))
(string->utf32 (bytevector? x))
(string->utf32 (bytevector? x))
(string->utf8 (bytevector? x))
(u8-list->bytevector (bytevector? x))
(uint-list->bytevector (bytevector? x))
(cfl* (cflonum? x) (cflonum? x) ...)
(cfl+ (cflonum? x) (cflonum? x) ...)
(cfl- (cflonum? x) (cflonum? x) **1)
(cfl-conjugate (cflonum? x) (cflonum? x))
(cfl-imag-part (cflonum? x) (cflonum? x))
(cfl-magnitude-squared (cflonum? x) (cflonum? x))
(cfl-real-part (cflonum? x) (cflonum? x))
(cfl/ (cflonum? x) (cflonum? x) **1)
(cfl= (cflonum? x) (cflonum? x) ...)
(char-downcase (char? x))
(char-foldcase (char? x))
(integer->char (char? x))
(read-char (char? x))
(read-char (char? x))
(make-compile-time-value (compile-time-value? x) (something? x))
(make-condition (condition? x))
(make-condition (condition? x))
(make-i/o-decoding-error (condition? x) (something? x))
(make-i/o-encoding-error (condition? x) (something? x) (something? x))
(make-i/o-error (condition? x) (something? x))
(make-i/o-file-already-exists-error (condition? x))
(make-i/o-file-does-not-exist-error (condition? x))
(make-i/o-file-is-read-only-error (condition? x))
(make-i/o-file-protection-error (condition? x))
(make-i/o-filename-error (condition? x))
(make-i/o-invalid-position-error (condition? x))
(make-i/o-port-error (condition? x) (something? x))
(make-i/o-read-error (condition? x))
(make-i/o-write-error (condition? x))
(make-continuation-condition (continuation-condition? x))
(make-cost-center (cost-center? x))
(make-date (date? x))
(make-date (date? x))
(time-utc->date (date? x))
(time-utc->date (date? x))
(make-eq-hashtable (eq-hashtable? x))
(make-eq-hashtable (eq-hashtable? x))
(make-error (error? x))
(syntax-error (error? x) (something? x) (string? x) ...)
(inexact->exact (exact? x) (number? x))
(bytevector-ieee-double-native-ref (fixnum? x))
(bytevector-ieee-double-ref (fixnum? x))
(fx* (fixnum? x) (fixnum? x) ...)
(fx* (fixnum? x))
(fx*/carry (fixnum? x))
(fx+ (fixnum? x) (fixnum? x) ...)
(fx+ (fixnum? x))
(fx+/carry (fixnum? x))
(fx- (fixnum? x) (fixnum? x) **1)
(fx- (fixnum? x))
(fx- (fixnum? x))
(fx-/carry (fixnum? x))
(fx/ (fixnum? x) (fixnum? x) **1)
(fx1+ (fixnum? x) (fixnum? x))
(fx1- (fixnum? x) (fixnum? x))
(fx< (fixnum? x) (fixnum? x) **1)
(fx<= (fixnum? x) (fixnum? x) **1)
(fx= (fixnum? x) (fixnum? x) **1)
(fx> (fixnum? x) (fixnum? x) **1)
(fx>= (fixnum? x) (fixnum? x) **1)
(fxabs (fixnum? x) (fixnum? x))
(fxand (fixnum? x))
(fxarithmetic-shift (fixnum? x))
(fxarithmetic-shift-left (fixnum? x))
(fxarithmetic-shift-right (fixnum? x))
(fxbit-count (fixnum? x))
(fxbit-field (fixnum? x))
(fxcopy-bit (fixnum? x))
(fxcopy-bit-field (fixnum? x))
(fxdiv (fixnum? x))
(fxdiv-and-mod (fixnum? x))
(fxdiv0 (fixnum? x))
(fxdiv0-and-mod0 (fixnum? x))
(fxfirst-bit-set (fixnum? x))
(fxif (fixnum? x))
(fxior (fixnum? x))
(fxlength (fixnum? x))
(fxlogand (fixnum? x) (fixnum? x) ...)
(fxlogbit0 (fixnum? x) (integer? x) (fixnum? x))
(fxlogbit1 (fixnum? x) (integer? x) (fixnum? x))
(fxlogior (fixnum? x) (fixnum? x) ...)
(fxlognot (fixnum? x) (fixnum? x))
(fxlogor (fixnum? x) (fixnum? x) ...)
(fxlogtest (fixnum? x) (fixnum? x) (fixnum? x))
(fxlogxor (fixnum? x) (fixnum? x) ...)
(fxmax (fixnum? x))
(fxmin (fixnum? x))
(fxmod (fixnum? x))
(fxmod0 (fixnum? x))
(fxmodulo (fixnum? x) (fixnum? x) (fixnum? x))
(fxnot (fixnum? x))
(fxquotient (fixnum? x) (fixnum? x) **1)
(fxremainder (fixnum? x) (fixnum? x) (fixnum? x))
(fxreverse-bit-field (fixnum? x))
(fxrotate-bit-field (fixnum? x))
(fxsll (fixnum? x) (fixnum? x) (integer? x))
(fxsra (fixnum? x) (fixnum? x) (integer? x))
(fxsrl (fixnum? x) (fixnum? x) (integer? x))
(fxvector-ref (fixnum? x))
(fxxor (fixnum? x))
(greatest-fixnum (fixnum? x))
(least-fixnum (fixnum? x))
(most-negative-fixnum (fixnum? x))
(most-positive-fixnum (fixnum? x))
(bytevector-ieee-single-native-ref (flonum? x))
(bytevector-ieee-single-ref (flonum? x))
(fixnum->flonum (flonum? x))
(fl* (flonum? x))
(fl+ (flonum? x))
(fl- (flonum? x))
(fl- (flonum? x))
(fl-make-rectangular (flonum? x) (fixnum? x) (fixnum? x))
(fl/ (flonum? x))
(fl/ (flonum? x))
(fl< (flonum? x) (fixnum? x) **1)
(fl<= (flonum? x) (fixnum? x) **1)
(fl= (flonum? x) (fixnum? x) **1)
(fl> (flonum? x) (fixnum? x) **1)
(fl>= (flonum? x) (fixnum? x) **1)
(flabs (flonum? x))
(flacos (flonum? x))
(flasin (flonum? x))
(flatan (flonum? x))
(flatan (flonum? x))
(flceiling (flonum? x))
(flcos (flonum? x))
(fldenominator (flonum? x))
(fldiv (flonum? x))
(fldiv-and-mod (flonum? x))
(fldiv0 (flonum? x))
(fldiv0-and-mod0 (flonum? x))
(flexp (flonum? x))
(flexpt (flonum? x))
(flfloor (flonum? x))
(fllog (flonum? x))
(fllog (flonum? x))
(fllp (flonum? x) (fixnum? x))
(flmax (flonum? x))
(flmin (flonum? x))
(flmod (flonum? x))
(flmod0 (flonum? x))
(flnumerator (flonum? x))
(flonum->fixnum (flonum? x))
(floor (flonum? x) (real? x))
(flround (flonum? x))
(flsin (flonum? x))
(flsqrt (flonum? x))
(fltan (flonum? x))
(fltruncate (flonum? x))
(flush-output-port (flonum? x))
(flush-output-port (flonum? x))
(real->flonum (flonum? x) (real? x))
(make-format-condition (format-condition? x))
(fxvector (fxvector? x) (fixnum? x) ...)
(fxvector-copy (fxvector? x))
(list->fxvector (fxvector? x))
(make-fxvector (fxvector? x))
(make-fxvector (fxvector? x) (integer? x) (fixnum? x))
(make-guardian (guadian? x))
(make-eqv-hashtable (hashtable? x))
(make-eqv-hashtable (hashtable? x))
(make-hashtable (hashtable? x))
(make-hashtable (hashtable? x))
(make-hash-table (hash-table? x))
(make-hash-table (hash-table? x))
(fxvector->immutable-fxvector (immutable-fxvector? x))
(string->immutable-string (immutable-string? x))
(vector->immutable-vector (immutable-vector? x))
(binary-port-input-count (integer? x))
(binary-port-input-size (integer? x))
(binary-port-output-count (integer? x))
(binary-port-output-size (integer? x))
(bitwise-bit-count (integer? x))
(bytevector-length (integer? x))
(bytevector-sint-ref (integer? x))
(bytevector-uint-ref (integer? x))
(ceiling (integer? x) (real? x))
(char->integer (integer? x))
(compute-composition (integer? x) (something? x))
(compute-composition (integer? x) (something? x) (procedure? x))
(compute-size (integer? x) (something? x))
(compute-size (integer? x) (something? x) (procedure? x))
(cost-center-allocation-count (integer? x))
(cost-center-instruction-count (integer? x))
(file-position (integer? x))
(file-position (integer? x))
(fixnum-width (integer? x))
(foreign-sizeof (integer? x))
(fxvector-length (integer? x))
(hashtable-size (integer? x))
(i/o-error-position (integer? x))
(object-counts (integer? x))
(port-input-count (integer? x))
(port-input-size (integer? x))
(port-output-count (integer? x))
(port-output-size (integer? x))
(port-position (integer? x))
(profile-release-counters (integer? x))
(quotient (integer? x))
(real-time (integer? x))
(round (integer? x) (real? x))
(source-table-size (integer? x))
(sstats-gc-count (integer? x))
(symbol-hash (integer? x))
(textual-port-input-count (integer? x))
(textual-port-input-size (integer? x))
(textual-port-output-count (integer? x))
(textual-port-output-size (integer? x))
(vector-length (integer? x))
(virtual-register-count (integer? x))
(append (list? x))
(append (list? x) (list? x) (something? x))
(bytevector->s8-list (list? x))
(bytevector->sint-list (list? x))
(bytevector->u8-list (list? x))
(bytevector->uint-list (list? x))
(fxvector->list (list? x))
(list (list? x) (something? x) ...)
(list-copy (list? x))
(list-head (list? x))
(list-sort (list? x))
(list-tail (list? x))
(merge (list? x))
(oblist (list? x))
(sort (list? x))
(string->list (map char? x))
(syntax->list (list? x))
(vector->list (list? x))
(command-line (map string? x))
(* (number? x) (number? x) ...)
(+ (number? x) (number? x) ...)
(- (number? x) (number? x))
(- (number? x) (number? x) (number? x) **1)
(-1+ (number? x) (number? x))
(/ (number? x) (number? x))
(/ (number? x) (number? x) (number? x) **1)
(1+ (number? x) (number? x))
(1- (number? x) (number? x))
(abs (number? x) (real? x))
(acos (number? x) (number? x))
(acosh (number? x) (number? x))
(add1 (number? x) (number? x))
(angle (number? x) (number? x))
(asin (number? x) (number? x))
(asinh (number? x) (number? x))
(atan (number? x) (number? x))
(cos (number? x) (number? x))
(cosh (number? x) (number? x))
(log (number? x) (number? x))
(log (number? x) (number? x) (number? x))
(magnitude (number? x) (number? x))
(magnitude-squared (number? x) (number? x))
(mod (number? x))
(mod0 (number? x))
(numerator (number? x))
(sin (number? x) (number? x))
(sinh (number? x) (number? x))
(sqrt (number? x) (number? x))
(string->number (number? x))
(string->number (number? x))
(sub1 (number? x) (number? x))
(tan (number? x) (number? x))
(tanh (number? x) (number? x))
(append! (pair? x))
(list* (pair? x) (something? x) ... (something? x))
(i/o-error-port (port? x))
(lambda (procedure? x))
(trace-case-lambda (procedure? x))
(trace-lambda (procedure? x))
(max (real? x) (real? x) (real? x))
(min (real? x) (real? x) (real? x))
(random (real? x) (real? x))
(rationalize (real? x) (real? x) (real? x))
(real-part (real? x) (number? x))
(truncate (real? x) (real? x))
(bytevector->string (string? x))
(i/o-error-filename (string? x))
(list->string (string? x))
(multibyte->string (string? x) (bytevector? x))
(number->string (string? x))
(number->string (string? x))
(number->string (string? x))
(symbol->string (string? x))
(utf16->string (string? x) (bytevector? x))
(utf16->string (string? x) (bytevector? x))
(utf32->string (string? x) (bytevector? x))
(utf32->string (string? x) (bytevector? x))
(utf8->string (string? x) (bytevector? x))
(string->symbol (symbol? x))
(file-change-time (time? x))
(file-change-time (time? x))
(file-modification-time (time? x))
(file-modification-time (time? x))
(make-time (time? x))
(list->vector (vector? x))
(syntax->vector (vector? x))
(vector (vector? x) (something? x) ...)
(vector-copy (vector? x))
(vector-sort (vector? x))
(add-duration! (void? x))
(box-cas! (void? x) (box? x) (something? x) (something? x))
(bytevector-copy! (void? x))
(bytevector-fill! (void? x))
(bytevector-ieee-double-native-set! (void? x))
(bytevector-ieee-double-set! (void? x))
(bytevector-ieee-single-native-set! (void? x))
(bytevector-ieee-single-set! (void? x))
(bytevector-s16-native-set! (void? x))
(bytevector-s16-set! (void? x))
(bytevector-s24-set! (void? x))
(bytevector-s32-native-set! (void? x))
(bytevector-s32-set! (void? x))
(bytevector-s40-set! (void? x))
(bytevector-s48-set! (void? x))
(bytevector-s56-set! (void? x))
(bytevector-s64-native-set! (void? x))
(bytevector-s64-set! (void? x))
(bytevector-s8-set! (void? x))
(bytevector-sint-set! (void? x))
(bytevector-truncate! (void? x))
(bytevector-u16-native-set! (void? x))
(bytevector-u16-set! (void? x))
(bytevector-u24-set! (void? x))
(bytevector-u32-native-set! (void? x))
(bytevector-u32-set! (void? x))
(bytevector-u40-set! (void? x))
(bytevector-u48-set! (void? x))
(bytevector-u56-set! (void? x))
(bytevector-u64-native-set! (void? x))
(bytevector-u64-set! (void? x))
(bytevector-u8-set! (void? x))
(bytevector-uint-set! (void? x))
(clear-input-port (void? x))
(clear-input-port (void? x))
(clear-output-port (void? x))
(clear-output-port (void? x))
(close-input-port (void? x))
(close-output-port (void? x))
(close-port (void? x))
(eq-hashtable-delete! (void? x))
(eq-hashtable-set! (void? x))
(eq-hashtable-update! (void? x))
(foreign-set! (void? x))
(fxvector-fill! (void? x) (fxvector? x) (fixnum? x))
(fxvector-set! (void? x) (fxvector? x) (integer? x) (fixnum? x))
(get-bytevector-n! (void? x))
(get-bytevector-some! (void? x))
(get-source-table! (void? x))
(get-source-table! (void? x))
(get-string-n! (void? x))
(get-string-some! (void? x))
(hashtable-clear! (void? x))
(hashtable-clear! (void? x))
(hashtable-delete! (void? x))
(hashtable-set! (void? x))
(hashtable-update! (void? x))
(load (void? x))
(load (void? x))
(load-compiled-from-port (void? x))
(load-library (void? x))
(load-library (void? x))
(load-program (void? x))
(load-program (void? x))
(load-shared-object (void? x) (string? x))
(mark-port-closed! (void? x))
(merge! (void? x))
(mkdir (void? x))
(mkdir (void? x))
(modulo (void? x))
(mutex-acquire (void? x))
(new-cafe (void? x))
(new-cafe (void? x))
(newline (void? x))
(newline (void? x))
(port-file-compressed! (void? x))
(put-char (void? x))
(put-datum (void? x) (textual-output-port? x) (something? x))
(put-hash-table! (void? x))
(put-registry! (void? x))
(put-source-table (void? x))
(put-string (void? x))
(put-string (void? x))
(put-string (void? x))
(put-string-some (void? x))
(put-string-some (void? x))
(put-string-some (void? x))
(put-u8 (void? x))
(raise (void? x) (something? x))
(raise-continuable (void? x) (something? x))
(remove! (void? x) (something? x) (list? x))
(remove-hash-table! (void? x))
(remove-registry! (void? x))
(remq! (void? x) (something? x) (list? x))
(remv! (void? x) (something? x) (list? x))
(reset-cost-center! (void? x))
(reset-maximum-memory-bytes! (void? x))
(reverse! (void? x))
(set! (void? x))
(set-binary-port-input-buffer! (void? x) (binary-input-port? x) (bytevector? x))
(set-binary-port-input-index! (void? x))
(set-binary-port-input-size! (void? x))
(set-binary-port-output-buffer! (void? x) (binary-output-port? x) (bytevector? x))
(set-binary-port-output-index! (void? x))
(set-binary-port-output-size! (void? x))
(set-box! (void? x) (box? x) (something? x) )
(set-car! (void? x) (pair? x) (something? x))
(set-cdr! (void? x) (pair? x) (something? x))
(set-port-bol! (void? x) (output-port? x) (something? x))
(set-port-eof! (void? x) (input-port? x) (something? x))
(set-port-input-buffer! (void? x))
(set-port-input-index! (void? x))
(set-port-input-size! (void? x))
(set-port-length! (void? x))
(set-port-name! (void? x) (port? x) (something? x))
(set-port-nonblocking! (void? x) (port? x) (something? x))
(set-port-output-buffer! (void? x))
(set-port-output-index! (void? x))
(set-port-output-size! (void? x))
(set-port-position! (void? x))
(set-sstats-bytes! (void? x))
(set-sstats-cpu! (void? x))
(set-sstats-gc-bytes! (void? x))
(set-sstats-gc-count! (void? x))
(set-sstats-gc-cpu! (void? x))
(set-sstats-gc-real! (void? x))
(set-sstats-real! (void? x))
(set-textual-port-input-buffer! (void? x))
(set-textual-port-input-index! (void? x))
(set-textual-port-input-size! (void? x))
(set-textual-port-output-buffer! (void? x))
(set-textual-port-output-index! (void? x))
(set-textual-port-output-size! (void? x))
(set-time-nanosecond! (void? x))
(set-time-second! (void? x))
(set-time-type! (void? x))
(set-timer (void? x))
(set-top-level-value! (void? x) (symbol? x) (something? x) )
(set-top-level-value! (void? x) (symbol? x) (something? x) (environment? x))
(set-virtual-register! (void? x))
(sleep (void? x))
(sort! (void? x))
(source-table-delete! (void? x) (source-table? x) (source-object? x))
(source-table-set! (void? x) (source-table? x) (source-object? x) (something? x))
(string-copy! (void? x))
(string-fill! (void? x))
(string-set! (void? x))
(string-truncate! (void? x))
(subst! (void? x))
(substq! (void? x))
(substring-fill! (void? x))
(substv! (void? x))
(subtract-duration! (void? x))
(symbol-hashtable-delete! (void? x))
(symbol-hashtable-set! (void? x))
(symbol-hashtable-update! (void? x))
(time-difference! (void? x))
(vector-cas! (void? x) (vector? x) (integer? x) (something? x) (something? x))
(vector-fill! (void? x))
(vector-set! (void? x))
(vector-set-fixnum! (void? x))
(vector-sort! (void? x))
(void (void? x))
(write (void? x))
(write (void? x))
(write-char (void? x))
(write-char (void? x))
))
)
./util/path.sls:      uri->path 
./util/path.sls:      uri-is-path? 
./util/path.sls:      uri->name
./util/path.sls:(define (private:path->uri-transformation path)
./util/path.sls:          (private:path->uri-transformation (substring path (+ 1 start-position) (string-length path)))
./util/path.sls:    (private:path->uri-transformation
./util/path.sls:(define (uri->path uri)
./util/path.sls:(define (uri-is-path? str)
./util/path.sls:(define (uri->name uri)
./util/path.sls:  (path->name (uri->path uri)))
./scheme-langserver.sls:  (let* ([root-path (uri->path (assq-ref params 'rootUri))]
./analysis/local-expand.sls:      [path (uri->path uri)]
./analysis/abstract-interpreter.sls:                        (file-linkage-set! file-linkage (uri->path (document-uri document)) (uri->path (document-uri current-document)))
./analysis/dependency/rules/load.sls:        [current-absolute-path (uri->path (document-uri document))])
./analysis/workspace.sls:          (source-file->annotations text (uri->path (document-uri target-document))))])
./analysis/identifier/rules/load.sls:      [current-absolute-path (uri->path (document-uri document))])
./analysis/identifier/rules/srfi/include-resolve.sls:      [current-absolute-path (uri->path (document-uri document))])
./analysis/identifier/rules/self-defined-syntax.sls:        [annotation-list (map (lambda (e) (source-file->annotations e (uri->path (document-uri document)))) tmp-result)])
./analysis/identifier/rules/load-library.sls:      [current-absolute-path (uri->path (document-uri document))])
./analysis/identifier/rules/load-program.sls:      [current-absolute-path (uri->path (document-uri document))])
./protocol/apis/document-symbol.sls:      [path (uri->path (text-document-uri text-document))]
./protocol/apis/document-symbol.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/hover.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/document-diagnostic.sls:  ;     [path (uri->path (text-document-uri text-document))]
./protocol/apis/document-highlight.sls:      [path (uri->path (text-document-uri text-document))]
./protocol/apis/document-highlight.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/completion.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/document-sync.sls:      [path (uri->path (text-document-uri text-document))])
./protocol/apis/document-sync.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (versioned-text-document-identifier-uri versioned-text-document-identifier)))]
./protocol/apis/references.sls:      [path (uri->path (text-document-uri text-document))]
./protocol/apis/references.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/references.sls:          [origin-paths (map uri->path origin-uris)]
./protocol/apis/definition.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./protocol/apis/formatting.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:      uri->path 
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:      uri-is-path? 
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:      uri->name
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:(define (private:path->uri-transformation path)
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:          (private:path->uri-transformation (substring path (+ 1 start-position) (string-length path)))
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:    (private:path->uri-transformation
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:(define (uri->path uri)
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:(define (uri-is-path? str)
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:(define (uri->name uri)
./.akku/lib/scheme-langserver/util/path.chezscheme.sls:  (path->name (uri->path uri)))
./.akku/lib/scheme-langserver/analysis/abstract-interpreter.chezscheme.sls:                        (file-linkage-set! file-linkage (uri->path (document-uri document)) (uri->path (document-uri current-document)))
./.akku/lib/scheme-langserver/analysis/local-expand.chezscheme.sls:      [path (uri->path uri)]
./.akku/lib/scheme-langserver/analysis/dependency/rules/load.chezscheme.sls:        [current-absolute-path (uri->path (document-uri document))])
./.akku/lib/scheme-langserver/analysis/workspace.chezscheme.sls:          (source-file->annotations text (uri->path (document-uri target-document))))])
./.akku/lib/scheme-langserver/analysis/identifier/rules/load.chezscheme.sls:      [current-absolute-path (uri->path (document-uri document))])
./.akku/lib/scheme-langserver/analysis/identifier/rules/load-program.chezscheme.sls:      [current-absolute-path (uri->path (document-uri document))])
./.akku/lib/scheme-langserver/analysis/identifier/rules/srfi/include-resolve.chezscheme.sls:      [current-absolute-path (uri->path (document-uri document))])
./.akku/lib/scheme-langserver/analysis/identifier/rules/self-defined-syntax.chezscheme.sls:        [annotation-list (map (lambda (e) (source-file->annotations e (uri->path (document-uri document)))) tmp-result)])
./.akku/lib/scheme-langserver/analysis/identifier/rules/load-library.chezscheme.sls:      [current-absolute-path (uri->path (document-uri document))])
./.akku/lib/scheme-langserver/protocol/apis/document-highlight.chezscheme.sls:      [path (uri->path (text-document-uri text-document))]
./.akku/lib/scheme-langserver/protocol/apis/document-highlight.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/formatting.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/completion.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/definition.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/hover.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/document-diagnostic.chezscheme.sls:  ;     [path (uri->path (text-document-uri text-document))]
./.akku/lib/scheme-langserver/protocol/apis/document-sync.chezscheme.sls:      [path (uri->path (text-document-uri text-document))])
./.akku/lib/scheme-langserver/protocol/apis/document-sync.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (versioned-text-document-identifier-uri versioned-text-document-identifier)))]
./.akku/lib/scheme-langserver/protocol/apis/document-symbol.chezscheme.sls:      [path (uri->path (text-document-uri text-document))]
./.akku/lib/scheme-langserver/protocol/apis/document-symbol.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/references.chezscheme.sls:      [path (uri->path (text-document-uri text-document))]
./.akku/lib/scheme-langserver/protocol/apis/references.chezscheme.sls:      [file-node (walk-file (workspace-file-node workspace) (uri->path (text-document-uri text-document)))]
./.akku/lib/scheme-langserver/protocol/apis/references.chezscheme.sls:          [origin-paths (map uri->path origin-uris)]
./.akku/lib/scheme-langserver.chezscheme.sls:  (let* ([root-path (uri->path (assq-ref params 'rootUri))]

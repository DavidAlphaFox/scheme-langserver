# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
#           - machine: a6osx
#             os: macos-11
#           - machine: ta6osx
#             os: macos-11
          - machine: i3le
            os: ubuntu-20.04
          - machine: ti3le
            os: ubuntu-20.04
          - machine: a6le
            os: ubuntu-20.04
          - machine: ta6le
            os: ubuntu-20.04
#           - machine: i3nt
#             os: windows-2019
#           - machine: i3nt
#             os: windows-2022
#           - machine: ti3nt
#             os: windows-2019
#           - machine: ti3nt
#             os: windows-2022
#           - machine: a6nt
#             os: windows-2019
#           - machine: a6nt
#             os: windows-2022
#           - machine: ta6nt
#             os: windows-2019
#           - machine: ta6nt
#             os: windows-2022
    runs-on: ${{ matrix.config.os }}
    # The type of runner that the job will run on
    env:
      TARGET_MACHINE: ${{ matrix.config.machine }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
        
    steps:
      - name: Configure git on Windows
        if: ${{ runner.os == 'Windows' }}
        run: git config --global core.autocrlf false
      - name: Setup 32-bit Linux
        if: ${{ endsWith(matrix.config.machine, 'i3le') }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install gcc-multilib lib32ncurses5-dev uuid-dev:i386
      - name: Clone Chez Scheme
        uses: actions/checkout@v3
        with:
          repository: cisco/ChezScheme 
          path: ChezScheme
      - name: Clone Chez exe
        uses: actions/checkout@v3
        with:
          repository: gwatt/chez-exe
          path: chez-exe
      - name: Install Chez Scheme
        run: |
          cd ChezScheme
          ./configure -m="${{ matrix.config.machine }}"
          make -j $(getconf _NPROCESSORS_ONLN)
          sudo make install
          cd ..
      - name: Install Chez-exe
        run: |
          cd chez-exe
          scheme --script gen-config.ss --bootpath "../ChezScheme/${{ matrix.config.machine }}/boot/${{ matrix.config.machine }}"
          make -j $(getconf _NPROCESSORS_ONLN)
          sudo make install
          cd ..
      - name: Install Akku
        run: |
          sudo apt-get install libcurl4 xz-utils
          wget https://gitlab.com/akkuscm/akku/-/archive/master/akku-master.tar.gz
          tar -zxvf akku-master.tar.gz
          cd akku-master
          .akku/env
          mkdir -p ~/.local/share/akku/keys.d
          cp akku-archive-*.gpg ~/.local/share/akku/keys.d
          bin/akku.sps update
          bin/akku.sps install
          sudo private/build.chezscheme.sps
          cd ..
      - name: Build 
        run: |
          akku install
          bash .akku/env
      - name: Test 
        run: bash tests.sh
      - name: Compile 
        run: compile-chez-program run.ss
#       - name: Build tests
#         timeout-minutes: 30
#         run: .github/workflows/test.sh
#       - name: Archive workspace
#         if: always()
#         run: tar -c -h -z -f $TARGET_MACHINE.tgz $TARGET_MACHINE
#       - name: Upload archive
#         if: always()
#         uses: actions/upload-artifact@v2
#         with:
#           name: ${{ matrix.config.machine }}
#           path: ${{ matrix.config.machine }}.tgz
#       - name: Check test results
#         run: |
#           cat $TARGET_MACHINE/mats/summary
#           diff -q .github/workflows/summary $TARGET_MACHINE/mats/summary
